version: 2.1

orbs:
    heroku: circleci/heroku@1.2.6

jobs:
  test-linting:
    docker:
      - image: python:3-slim
    steps:
      - checkout
      - run:
          name: Install packages and dependencies
          command: |
            pip install --no-cache-dir --user -r requirements.txt
      - run:
          name: Run tests
          command: python -m pytest
      - run:
          name: Run flake8
          command: python -m flake8

  push-image-to-docker-and-heroku-registers:
    executor: heroku/default
    steps:
      - checkout
      - setup_remote_docker
      - heroku/install
      - run: |
          image_name="$DOCKER_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1"
          docker build -t $image_name .
          echo $DOCKERHUB_ACCESS_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $image_name
          heroku container:login
          heroku config:set ENV="PRODUCTION" -a $HEROKU_APP_NAME
          heroku config:set PORT=8000 -a $HEROKU_APP_NAME
          heroku config:set SECRET_KEY=$SECRET_KEY -a $HEROKU_APP_NAME
          heroku config:set SENTRY_DSN=$SENTRY_DSN -a $HEROKU_APP_NAME
          docker tag $image_name registry.heroku.com/"$HEROKU_APP_NAME"/web
          docker push registry.heroku.com/"$HEROKU_APP_NAME"/web

  deploy-to-heroku:
    executor: heroku/default
    steps:
      - checkout
      - setup_remote_docker
      - heroku/install
      - heroku/release-docker-image

workflows:
  tests-linting-build-deploy:
    jobs:
      - test-linting
      - push-image-to-docker-and-heroku-registers:
          requires:
            - test-linting
          filters:
            branches:
              only: master
      - deploy-to-heroku:
          requires:
            - push-image-to-docker-and-heroku-registers
          filters:
            branches:
              only: master